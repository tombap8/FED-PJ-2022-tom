[ Vue JS 기초 ]

-> 사용자 인터페이스를 만들기 위한 진보된 프레임워크 입니다. 

1. 개념:
- 웹 페이지의 빈번한 변경을 반영하기 위해
일반적인 JS에서는 요소를 선택후 하나씩 DOM에 반영한다.
Vue JS는 가상DOM을 만들어서 변경사항을 모두 수집하여
실제 DOM에 한번에 반영시켜준다!
가상DOM이란 메모리상에만 존재하는 실제 DOM의 카피본이다!
- 데이터를 실시간으로 변경 반영하도록 View Model을 사용한다!
뷰모델(View Model)이란 실제 페이지에 반영하는 변경내용을
미리 정의하여 가상돔에 올리기위한 모듈이다!

-> Vue JS의 사용목적: 복잡한 웹 어플리케이션의 개발 및 유지보수
를 쉽게하기 위해 등장한 JS 라이브러리다!

-> SPA를 위해서 가장 좋다!
Single Page Application ???
예컨데 일반 웹페이지에 반복되는 부분과 변경되는 부분이 있다.
보통 구현시엔 별도의 페이지로 메인페이지, 서브페이지 등으로
만들게 된다! 그런데 SPA는 한 페이지 안에서 고정되는 부분은
그대로 두고 변경되는 부분만 Vue JS로 구현할 수 있다!

2. 참고 웹:

1) Vue JS 본사설명서: 
https://kr.vuejs.org/v2/guide/index.html

2) 뷰JS 비교적 쉽운 입문서:
고양이도 할 수 있는 Vue.js
https://rintiantta.github.io/jpub-vue/



3. Vue JS 기본 구현 구조
 MVVM 모델을 기본으로 함
 M - Model : 화면에 데이터를 구성하는 역할
 V - View : 실제출력화면(DOM)
 VM - View Model : 뷰 인스턴스 객체의 비즈니스를 구성하는 역할
                    -> VM은 모델과 뷰의 중간역할자임!


4. 제이슨(JSON)은 무엇인가?
- 데이터를 문자형태로 저장하고 데이터를 전송하기
위한 파일 포멧이다!
- 표기법은 JS의 객체 표현법과 동일하다!
{속성명:값,속성명:값,...}
- 파일확장자는 .json
- 현재 xml 데이터 보다 더 많이 사용됨!
(이유: 간단하니까!)

5. Vue JS html 태그에 사용하는 속성은?
    디렉티브 라고 하며
    v- 로 시작한다!
예) v-for, v-bind, v-if 등