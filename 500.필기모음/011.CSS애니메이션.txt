[ CSS에서 애니메이션 구현하기 : animation ]

- html요소의 변화를 키프레임(장면)에 주고 이를 호출하여
브라우저에서 애니메이션이 연출 될 수 있게 하는 CSS 구현기술

[ 키프레임이란? ]
- 애니메이션 변화를 지정하는 코딩영역

[ 2장면 코딩법 ]

@keyframes 키프레임명{
    from{시작CSS}
    to{마지막CSS}
}

[ 여러장면 코딩법 ]
- 퍼센트로 장면을 분할하여 사용함
(무한대의 장면 연출가능)

@keyframes 키프레임명{
    0%{CSS설정}
    10%{CSS설정}
    20%{CSS설정}
    ...
    90%{CSS설정}
    100%{CSS설정}
}

[ 설정된 키프레임 호출하는 방법 ]

animation: 이시이지반방마
(이름 시간 이징 지연 반복 방향 마지막상태)

1) 이름(animation-name) : keyframe 이름
2) 시간(animation-duration) : 애니메이션 동작시간(초단위:s)
3) 이징(animation-timing-function) : easing 가속도
4) 지연(animation-delay) : 애니메이션 시작지연시간(초단위:s)
5) 반복여부(animation-iteration-count) : 애니메이션 반복횟수
    - 기본값 1, 숫자를 쓰면 반복횟수
    - 영원히는 infinite(인피니트)
6) 방향(animation-direction) : 시작->끝
    - 대체경로 설정하기 : alternate : 시작->끝,끝->시작
    - 대체경로는 반복횟수가 2이상 또는 infinite 이여야함
7) 마지막상태(animation-fill-mode) : 애니메이션이 끝났을때
    - 처음상태로 돌아가는 것이 기본!
    - 마지막 상태를 유지하고 싶을때 forwards(앞쪽에...즉,애니끝장면)



[ CSS 애니메이션 수정 툴 사용하기 ]
______________________________________________________
1. 크롬 animation 인스펙터
(개발자모드 F12 or Ctrl+Shift+I 
설정메뉴>More tools>Animation 으로 꺼내야함)
- 장점: 
1) 애니메이션 흐름파악(시간이동,멈춤자유)
2) 시간조정
3) 애니메이션을 멈춤 상태에서 특정 프레임의 속성을 변경후
애니메이션을 계속 플레이할 경우 변경이 반영된 애니메이션을 
확인할 수 있다.

- 단점:(비주얼 프레임 모드에서의 단점)
1) 각 키프레임별 변경 미리보기 안됨
2) 전체 시간 변경시 호출 설정이 상이하게 변함
3) 드래그로 전체시간,시작,끝시간 변경은 되나
   중간 텀 변경시 코드 반영이 안됨
3) %로 표시안되고 시간으로 표시돼서 가늠이 어려움
4) 이징 선택 조정이 불편함
_________________________________________________________
2. 파이어폭스 animation 인스펙터
(개발자모드에 나와있음)
- 장점:
1) 애니메이션 흐름파악(시간이동,멈춤자유)
2) 각 키프레임별 변경 미리보기 됨
3) 호출 변경시(이징변경) 표기법이 그대로임
4) %로 표시돼서 가늠이 쉬움
5) 이징 선택조정이 편함
- 단점: 
1) 드래그로 전체 시간조정 안됨
