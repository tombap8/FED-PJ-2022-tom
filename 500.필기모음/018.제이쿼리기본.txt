***********************
[ 제이쿼리 기본 사용법 ] 
>>>> jquery.com <<<<<
***********************
샘플 PJ
https://tombap8.github.io/KITA-FED212/004.jQuery학습/001.기본사용법/001.제이쿼리종합/index.html
_____________________________________________________

1. 제이쿼리는 무엇인가?
- 자바스크립트로 만든 함수 집합체 -> JS 라이브러리
- 라이브러리? 도서관? 
-> 분류체계로 지식을 쉽게 찾을 수 있도록 제공하는 서비스
-> JS 라이브러리는 JS를 쉽게 쓸 수 있도록 함수를 제공하는 서비스
-> 이점은? 소스코드가 직관적이고 간단하고 쉽고 짧아진다!
-> 제이쿼리는 말하는대로 생각한대로 구현된다!

※ 제이쿼리 라이브러리는 사이트에서 다운로드함
-> https://jquery.com/
-> 다운로드시 2가지 파일있음
    1) 압축버전 : compressed 버전
    2) 비압축버전 : uncompressed 버전
    -> 서버 배포시엔 용량이 1/3정도로 가벼운 압축버전을씀
    압축버전은 파일명에 min이라는 단어가 들어가 있음!
    jquery-3.6.0.min.js
    
-> 제이쿼리 라이브러리 CDN(Content Delivery Network)
 : 네트워크로 라이브러리를 불러올 수 있다
 예) 구글링크
 https://developers.google.com/speed/libraries#jquery

______________________________________________________

[ jQuery UI란 무엇인가? ]

- jQuery UI는 제이쿼리 원본개발자들이
    추가개발하여 배포한 플러그인이다!
- 기능종류: 드래그/드롭, 달력, 아코디언, 이징, 컬러애니 등
- 사용법: jQuery UI를 라이브러리 아래 추가함!
: 다운로드는 사이트에서!  https://jqueryui.com

- 이징기능도 jQuery UI가 있어야함!
-> https://easings.net/ko 
 여기에서 가속도 및 이름참조하기!

________________________________

2. 제이쿼리 함수 호출법

-> 제이쿼리는 함수 호출전 반드시 제이쿼리 라이브러리파일을
먼저 불러와야한다! 순서가 매우매우 중요하다!
-> 제이쿼리는 선언적함수가 아니고 할당형 익명함수다!
따라서 코드가 실행될때 메모리에 로드된다.

1) 함수명 - jQuery() : 대소문자구분
    -> 제이쿼리 이름의 기원은 j는 JS를 뜻함
    query는 질의라는 뜻. 기술적인 질문 - 함수로 부터
    리턴값이 있는 질문이라는 뜻.

2) 함수명 단축
    jQuery() -> $()

3) 로드구역 설정
    JS는 
    document.addEventListener("DOMContentLoaded",
    function(){구현부});

    제이쿼리는
    $(function(){구현부});

    좀더 축약하면
    $(()=>{구현부});
______________________________________________________

4. 요소 선택하기
 $(선택자)
 -> 선택자는 CSS선택자, 따옴표로 싸는 문자형
 예) $(".my li")
 ______________________________________________________

5. 요소 선택 세부옵션

    [선택자 자체 선택옵션 : 선택자 따옴표 안에 표기]

    1) 자기자신의 하위 요소 선택: this키워드 사용시
        직계자식 - $(">선택자",this) == $(this).children("선택자")
        자손선택 - $("선택자",this) == $(this).find("선택자")

    2) 형제관련 요소 선택: CSS기본 선택자
        - 다음형제선택 : $("+선택자")
        - 다음형제들선택자 : $("~선택자")

    3) 속성선택자 : [속성명] - CSS기본선택자
        - 시작하는 문자찾기 : ^=    예) $("li[class^=my]")
        - 끝나는 문자찾기 : $=    예) $("li[class$=my]")
        - 모든 문자찾기 : *=    예) $("li[class*=my]")
        -> 아닌것 : !=  예) $("li[class!=my]") => 제이쿼리전용!

    4) 순번선택자 -> :eq (제이쿼리전용)
        - 0부터 시작하는 순번 선택자    예) $("li:eq(2)") -> 3번째 li

    5) 처음, 마지막 선택자 -> :first, :last
        -> :first-child, :last-child 는 그룹별 첫번째, 마지막째 이고
        :first, :last는 전체에서 첫번째, 마지막째 이다!

    6) 내부문자찾기 선택자 -> :contains(문자)
        예) $("li:contains('ab')") -> 'ab'문자가 있는 li요소

    7) 내부요소찾기 선택자 -> :has(요소명)
        예) $("div:has('span')") -> span태그를 포함한 div요소

_____________________________________________________

    [탐색 선택옵션 : 선택후 뒤에 메서드형태로 선택함]

    1) children(선택자) : 직계자식 선택
        $(선택자).children(선택자)
        예) $("#hay").children("div")
        비교) $("#hay>div") 위와 같음!

    2) find(선택자) : 자손선택
        $(선택자).find(선택자)
        예) $(".sum").find("span")

    3) eq(순번) : 몇번째 자식요소 
        : eq() -> sequence에서 나온말
        $(선택자).eq(순번) : 순번은 0부터
        예) $(".my li").eq(3) -> 4번째 li선택

    4) first() : 첫번째 자식 
        $(선택자).first()
        예) $("li").first() -> 첫번째 li

    5) last() : 마지막째 자식 
        $(선택자).last()
        예) $("li").last() -> 첫번째 li

    6) prev() 선택요소 앞형제요소

    7) next() 선택요소 뒤형제요소

    8) siblings() 선택요소 외의 다른 형제요소들 선택

    9) parent() 선택요소의 부모요소 선택
_____________________________________________________

6. 이벤트 메서드
1) click(함수) - 클릭시 함수실행 
2) mouseover(함수) - 오버시 함수실행
3) mouseout(함수) - 아웃시 함수실행

_____________________________________________________

7. 기능 메서드

1) hide() -> 선택요소를 display:none 으로 변경
    -> 확장형: hide(시간,이징,함수)

2) show() -> 선택요소를 원래 display로 변경함!
    -> 확장형: show(시간,이징,함수)

3) animate() 메서드
    animate({CSS설정},시간,이징,함수)
    - CSS 설정에 따라 애니메이션을 연출하는 메서드
    css값은 {속성명:값,속성명:값,...}
    객체형식으로 값을 할당하여 사용한다!
    - 시간 - 1/1000초 (단위없음)
        : 1000이라고 쓰면 1초다!
        -> 안쓰면 400(0.4초) 기본값
    - 이징 - 가속도(jQuery UI를 가져와야함!)
    - 함수 - 애니후 실행코드 함수(콜백함수)
        : 익명함수를 많이 사용함!
    ※ 주의사항 - 애니메이션을 할 대상에 트랜지션 설정하지
    말아야 한다! 만약 트랜지션이 있으면 오작동이 일어남!

4) css() 메서드 - css속성을 변경하는 메서드
    css({속성명:값,속성명:값,...})
    - 속성명으로 변수형, 문자형 모두사용가능
        변수형: borderRadius
        문자형: "border-radius"
        -> 변수형을 더 많이 씀

5) each() 메서드
    each(function(idx,ele){구현부})
   -> 선택요소를 순서대로 돌면서 구현부를 실행하는 메서드
   -> idx 전달변수는 순번이 전달됨(0부터)
   (idx -> index에서 나온말로 변수명 사용)
   -> ele 전달변수는 요소자신(this키워드와 동일)
   (ele -> element에서 나온말로 변수명 사용)
   - 참고로 idx, ele변수명은 변경가능. 변수의 순서가 중요!
   - 이 메서드를 사용하면 for문을 안써도 됨!

6) text() 메서드 : 글자데이터를 읽거나 넣는 메서드
    - $(선택요소).text() -> 선택요소의 글자데이터 읽어옴
    - $(선택요소).text(내용) -> 선택요소의 글자데이터 넣기

7) html() 메서드 : html태그를 읽거나 넣는 메서드
    - $(선택요소).html() -> 선택요소의 태그를 읽어옴
    - $(선택요소).html(내용) -> 선택요소의 태그 넣기

8) append() 메서드 
    append(태그/기존요소)
    : 새로운요소를 맨뒤에 추가하거나 기존요소를 맨뒤로 이동하는 메서드
    -> 포인트: 기존요소는 살아있다!

9) prepend() 메서드 
    prepend(태그/기존요소)
    : 새로운요소를 맨앞에 추가하거나 기존요소를 맨앞로 이동하는 메서드
    -> 포인트: 기존요소는 살아있다!

10) fadeIn() 메서드
    - opacity값을 1로 변경하며 서서히 나타남
    - 특징-> display:none인 상태를 보이는 상태로 변경함!
    fadeIn(시간,이징,함수)
    - 시간은 1/1000초
    - 이징은 가속도
    - 함수는 콜백함수(애니후 실행)

11) fadeOut() 메서드
    - opacity값을 0으로 변경하며 서서히 사라짐
    - 특징-> display:none으로 끝남!
    fadeIn(시간,이징,함수)
    - 시간은 1/1000초
    - 이징은 가속도
    - 함수는 콜백함수(애니후 실행)

12) slideUp() 메서드
    - height값을 0으로 만들고 넘치는 자식요소 숨기기를 자동처리함
    - 특징 동작후 display:none 상태로 끝남
    slideUp(시간,이징,함수)
    - 시간은 1/1000초
    - 이징은 가속도
    - 함수는 콜백함수(애니후 실행)

13) slideDown() 메서드
    - height값을 원래대로 만들고 넘치는 자식요소 숨기기를 자동처리함
    - display:none 상태로 시작하여 원래상태로 보임
    -> 특징: 높이값은 자동으로 원상복귀해줌!
    slideDown(시간,이징,함수)
    - 시간은 1/1000초
    - 이징은 가속도
    - 함수는 콜백함수(애니후 실행)

14) delay() 메서드
    - 애니메이션 메서드 앞에서 시간을 지연하는 메서드
    - delay(시간)
    : 시간은 1/1000초
    - 주의사항: 애니메이션 되는 메서드가 아니면 효과가 없다!
    예) $(선택자).delay(2000).css({left:"100px"}) -> 지연안됨!
      $(선택자).delay(2000).animate({left:"100px"},400) -> OK!

15) empty() 메서드
    - 텍스트 데이터를 지워주는 메서드

16) attr() 메서드 : attribute 에서 줄인말

    - attr(속성명,값) - 선택요소의 속성바꾸기
    -> JS의 setAttribute(속성명,값) 비교

    - attr(속성명) - 선택요소의 속성값 가져오기
    -> JS의 getAttribute(속성명) 비교

17) remove() 메서드 : 선택요소를 제거하는 메서드

18) addClass(클래스명) 
: 선택요소에 클래스 넣기

19) removeClass(클래스명) 
: 선택요소에 클래스 제거하기, 클래스명 안쓰면 모든 클래스를 지움!

20) toggleClass(클래스명) 
: 선택요소에 해당클래스가 있으면 빼고 없으면 넣기

비교) JS 기본 내장함수 : 
    classList.add(클래스명)
    classList.remove(클래스명)
    classList.toggle(클래스명)

21) before(요소)
- 선택요소 앞에 형제로 요소 삽입

22) after(요소)
- 선택요소 뒤에 형제로 요소 삽입

_____________________________________________________

8. 수치리턴 메서드 - 선택요소의 위치, 크기 구하기

1) $(선택요소).offset() : 선택요소의 설정값 읽어오기
    - $(선택요소).offset().top : top값
    - $(선택요소).offset().left : left값
2) $(선택요소).width() : 선택요소의 width값 읽어오기
3) $(선택요소).height() : 선택요소의 height값 읽어오기
